version: "3.8"

services:
  api:
    build: .
    container_name: quest-tracker-api
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - SEED_DB=${SEED_DB:-false}
    networks:
      - app-network
    command: >
      bash -c "if [ ! -f /app/alembic/versions/*.py ]; then
                echo 'No migrations found. Creating initial migration...'
                alembic revision --autogenerate -m 'initial'
              else
                echo 'Migrations already exist.'
              fi &&
              echo 'Applying any pending migrations...' &&
              alembic upgrade head &&
              if [ \"$SEED_DB\" = \"true\" ]; then
                echo 'Seeding data...'
                python scripts/seed_data.py
              else
                echo 'Skipping database seeding. Set SEED_DB=true to seed.'
              fi &&
              echo 'Starting API...' &&
              uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  db:
    image: postgres:15
    container_name: quest-tracker-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:postgres@db/quest_tracker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=quest_tracker
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
